def getTagName() {
  return "${env.BRANCH_NAME}".replace('/', '-')
}

pipeline {

  agent any

  environment {
    IMAGE_NAME = 'silph/silph-bot'
    IMAGE_TAG = getTagName()
    DEPLOY = 'deploy/silph-gg'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Image') {
      steps {
        sh '''
          docker build . \
          -t $IMAGE_NAME:$IMAGE_TAG \
          -t $IMAGE_NAME:$IMAGE_TAG.$BUILD_NUMBER
        '''
      }
    }

    stage('Publish Image') {
      steps {
        withDockerRegistry(registry: [credentialsId: 'dockerhub']) {
          sh 'docker push $IMAGE_NAME:$IMAGE_TAG'
          sh 'docker push $IMAGE_NAME:$IMAGE_TAG.$BUILD_NUMBER'
        }
      }
    }

    stage('Deploy') {

      when {
        buildingTag()
      }

      environment {
        KUBECONFIG = credentials('kube-config')
        NAMESPACE = 'silph-bots'
      }

      steps {
        sh 'kubectl --namespace $NAMESPACE set image $DEPLOY silph-gg=$IMAGE_NAME:$TAG_NAME'
      }

      post {
        success {
          discordSend description: getChangeLog(), title: "silph-bot ${env.TAG_NAME} has been deployed", result: 'SUCCESS', link: "${env.RUN_DISPLAY_URL}", footer: 'build.silph.io', webhookURL: 'https://discordapp.com/api/webhooks/752970236331819081/TdglUImHWn5Xttzp1faEC9EKw82plrsdkRj92r9XjNGOmyjdgNXTqFgizlpdUEHp0Wbd'
        }
        failure {
          discordSend description: getChangeLog(), title: "silph-bot ${env.TAG_NAME} failed deploy", result: 'FAILURE', footer: 'build.silph.io', link: "${env.RUN_DISPLAY_URL}", webhookURL: 'https://discordapp.com/api/webhooks/752970236331819081/TdglUImHWn5Xttzp1faEC9EKw82plrsdkRj92r9XjNGOmyjdgNXTqFgizlpdUEHp0Wbd'
        }
      }
    }
  }
}
